package rst.vision;

import "rst/math/Vec2DInt.proto";

option java_outer_classname = "FaceLandmarksType";

/**
 * FaceLandmarks represent the result of an 68 point face landmark
 * detection.
 *
 * For example images see:
 * http://ibug.doc.ic.ac.uk/resources/facial-point-annotations/
 *
 * For readability the 68 face landmarks are split into points of
 * different face parts. The point order is preserved.
 *
 * @author Viktor Richter <vrichter@techfak.uni-bielefeld.de>
 */
message FaceLandmarks {

    /**
     * 17 Points of the jaw.
     *
     * jaw[0]  = top-left point of the face
     * jaw[8]  = the center of the chin
     * jaw[16] = top-right point of the face
     */
    // @constraint(len(value) == 17)
    repeated .rst.math.Vec2DInt jaw  = 1;

    /**
     * 4 Points of the nasal bridge.
     *
     * nose[0] = top-point of the nasal bridge
     * nose[3] = bottom-point of the nasal bridge (tip of the nose)
     */
    // @constraint(len(value) == 4)
    repeated .rst.math.Vec2DInt nose = 2;

    /**
     * 5 Points of the nose wings.
     *
     * nose_wings[0] = left end of the lower nasal edge
     * nose_wings[2] = the center of the lower nasal edge
     * nose_wings[4] = right end of the lower nasal edge
     */
    // @constraint(len(value) == 5)
    repeated .rst.math.Vec2DInt nose_wings = 3;

    /**
     * 5 Points of the rigt brow.
     *
     * right_brow[0]  = left end of the right brow
     * right_brow[4]  = right end of the right brow
     */
    // @constraint(len(value) == 5)
    repeated .rst.math.Vec2DInt right_brow = 4;

    /**
     * 5 Points of the left brow.
     *
     * left_brow[0]  = left end of the left brow
     * left_brow[4]  = right end of the left brow
     */
    // @constraint(len(value) == 5)
    repeated .rst.math.Vec2DInt left_brow = 5;

    /**
     * 6 Points of the border of the right eye.
     *
     * right_eye[0]  = left peak of the right eye
     * ...           = right upper eye-lid
     * right_eye[3]  = right peak of the right eye
     * ...           = right lower eye-lid
     */
    // @constraint(len(value) == 6)
    repeated .rst.math.Vec2DInt right_eye = 6;

    /**
     * 6 Points of the border of the left eye.
     *
     * right_eye[0]  = left peak of the left eye
     * ...           = left upper eye-lid
     * right_eye[3]  = right peak of the left eye
     * ...           = left lower eye-lid
     */
    // @constraint(len(value) == 6)
    repeated .rst.math.Vec2DInt left_eye = 7;

    /**
     * 12 Points of the outer border of the lips.
     *
     * outer_lips[0] = left corner of the outer lips
     * ...           = left upper edge
     * outer_lips[3] = center of the upper lip
     * ...           = right upper edge
     * outer_lips[6] = right corner of the outer lips
     * ...           = right lower edge
     * outer_lips[9] = center of the lower lip
     * ...           = left lower edge
     */
    // @constraint(len(value) == 12)
    repeated .rst.math.Vec2DInt outer_lips = 8;

    /**
     * 8 Points of the inner border of the lips.
     *
     * inner_lips[0] = left corner of the inner lips
     * inner_lips[2] = center of the upper lip
     * inner_lips[4] = right corner of the inner lips
     * inner_lips[6] = center of the lower lip
     */
    // @constraint(len(value) == 8)
    repeated .rst.math.Vec2DInt inner_lips = 9;

}
