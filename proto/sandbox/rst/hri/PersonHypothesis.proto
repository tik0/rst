syntax = "proto2";

package rst.hri;

import "rst/math/Vec2DFloat.proto";
import "rst/vision/LocatedFace.proto";
import "rst/tracking/TrackingInfo.proto";
import "rst/hri/Body.proto";

option java_outer_classname = "PersonHypothesisType";

/**
 * A hypothesis about a person (e.g. in a person-tracking system).
 *
 * @author Johannes Wienke <jwienke@techfak.uni-bielefeld.de>
 */
message PersonHypothesis {

    /**
     * A unique identification of a person hypothesis maintained by
     * the person manager.
     */
    optional tracking.TrackingInfo tracking_info = 1;

    /**
     * The person's face as a part of an image. This also includes the
     * head's pose in 3D space.
     */
    optional vision.LocatedFace face = 3;

    /**
     * Geometric properties of the person's body.
     *
     * This includes the person's position in the world.
     */
    optional hri.Body body = 10;

    /**
     * Represents a person's age in years as a range.
     *
     * If the exact age is known, set both values (min and max) to the
     * desired value.
     */
    message AgeRange {

        /**
         * The lower bound of the age range.
         */
        required float age_min = 1;

        /**
         * The upper bound of the age range.
         */
        required float age_max = 2;

    }

    /**
     * The person's age in years as a range.
     *
     * If the exact age is known, set both bounds of the range to the
     * desired value.
     */
    optional AgeRange age = 40;

    enum Gender {
        UNKNOWN = 0;
        MALE = 1;
        FEMALE = 2;
    }

    /**
     * The person's gender.
     */
    optional Gender gender = 42 [default = UNKNOWN];

    /**
     * The person's name. Empty string means unknown or undecided.
     */
    optional string name = 44;

    /**
     * Human height of the person (from the ground).
     *
     * @see http://en.wikipedia.org/wiki/Human_height
     *      "Definition of the person's body height"
     */
    // @unit(meter)
    // @constraint(value >= 0)
    optional float human_height = 45;

    /**
     * Indication of the probability that a person focuses on a named
     * attention target in the scene.
     */
    message AttentionTarget {

        /**
         * String description of the target
         */
        required bytes name = 1;

        /**
         * Probability of the target.
         */
        // @constraint(0 <= value <= 1)
        required float probability = 2;

    }

    /**
     * A list of defined attention targets in a scene that a person can focus
     * on with the probability that each target is actually currently focused
     * by this person.
     */
    repeated AttentionTarget attention_targets = 50;
}
