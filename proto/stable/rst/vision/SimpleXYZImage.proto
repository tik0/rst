syntax = "proto2";

package rst.vision;

import "rst/Unit.proto";
import "rst/Constraint.proto";

option java_outer_classname = "SimpleXYZImageType";

/**
 * Saves 3D data (X, Y, Z values) which have a 2D ordering.
 *
 * This kind of depth-data is produced by e.g. Kinect or Swissranger
 * cameras.
 *
 * @ref .x, @ref .y, @ref .z are 1D arrays which save separately the
 * X, Y, Z values of the 3D points.
 *
 * @author Agnes Swadzba <aswadzba@techfak.uni-bielefeld.de>
 */
// @create_collection
message SimpleXYZImage {

    /**
     * Width of the underlying 2D ordering structure.
     */
    required uint32 width  = 1 [ (rst.unit) = "pixel",
                                 (rst.field_constraint) = "value > 0" ];


    /**
     * Height of the underlying 2D ordering structure.
     */
    required uint32 height = 2 [ (rst.unit) = "pixel",
                                 (rst.field_constraint) = "value > 0" ];

    /**
     * The values are ordered by linearizing the underlying 2D structure row-wise.
     */
    repeated float x = 3;

    /**
     * See @ref .x.
     */
    repeated float y = 4;

    /**
     * See @ref .x.
     */
    repeated float z = 5;

    option (rst.message_constraint) = ".width * .height = len(.x)";
    option (rst.message_constraint) = ".width * .height = len(.y)";
    option (rst.message_constraint) = ".width * .height = len(.z)";

};
