syntax = "proto2";

package rst.devices.generic;

import "rst/Unit.proto";
import "rst/Constraint.proto";

option java_outer_classname = "MemoryStateType";

/**
 * Usage information about the system memory of a processing node.
 *
 * @author Jens-Christian Seele <jseele@techfak.uni-bielefeld.de>
 * @author Johannes Wienke <jwienke@techfak.uni-bielefeld.de>
 * @author Jan Moringen <jmoringe@techfak.uni-bielefeld.de>
 */
// @create_collection
message MemoryState {

    /**
     * The total amount of system memory available.
     */
    optional float total = 2 [ (rst.unit) = "byte",
                               (rst.field_constraint) = "value>=0"];

    /**
     * The currently used amount of memory. This includes everything including
     * cached memory etc. Stated the other way around, @ref .total - @ref .free
     * must result in the amount of memory currently being completely unused.
     */
    optional float used = 3 [ (rst.unit) = "byte",
                              (rst.field_constraint) = "0<=value<=.total" ];

    /**
     * The amount of working memory that can be used by processes without
     * swapping, either because it is directly free or it can be reclaimed.
     */
    optional uint64 usable = 4 [ (rst.unit) = "byte",
                                 (rst.field_constraint) = "0<=value<=.total" ];

    /**
     * The amount of swap space available.
     */
    optional uint64 swap_total = 5 [ (rst.unit) = "byte",
                                     (rst.field_constraint) = "value>=0" ];

    /**
     * The amount of swap space currently being used.
     */
    optional uint64 swap_used = 6 [ (rst.unit) = "byte",
                                    (rst.field_constraint) = "0<=value<=.swap_total" ];

}
