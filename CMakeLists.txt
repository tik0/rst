CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT("RST")

SET(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS TRUE)

SET(VERSION_MAJOR 0 CACHE STRING "Major project version part")
SET(VERSION_MINOR 8 CACHE STRING "Minor project version part")

# --- user options ---

OPTION(BUILD_CPP "Decide whether to build the CPP bindings." ON)
OPTION(BUILD_JAVA "Decide whether to build the Java bindings." ON)
OPTION(BUILD_PYTHON "Decide whether to build the Python bindings." ON)
OPTION(BUILD_MATLAB "Decide whether to build the Matlab bindings." ON)

# --- dependency handling ---

FIND_PACKAGE(RSC "${VERSION_MAJOR}.${VERSION_MINOR}" REQUIRED)
LIST(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_INSTALL_PREFIX}/share/cmake/Modules" ${RSC_CMAKE_MODULE_PATH})

FIND_PACKAGE(ProtocolBuffers REQUIRED)
IF(NOT PROTOBUF_LIBRARY)
    MESSAGE(FATAL_ERROR "protobuf library not found")
ENDIF()
IF(NOT PROTOBUF_PROTOC_EXECUTABLE)
    MESSAGE(FATAL_ERROR "protoc executable not found")
ENDIF()

# --- final version definition ---

# finally we can deduce the real project version with the RSC macros
INCLUDE(DefineProjectVersion)
DEFINE_PROJECT_VERSION(RST_ ${VERSION_MAJOR} ${VERSION_MINOR} 0 "archive")

MESSAGE(STATUS "This is rst version ${RST_VERSION}")

# --- protocol files ---

FILE(GLOB_RECURSE STABLE_PROTOS_REL
     RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}"
     "${CMAKE_CURRENT_SOURCE_DIR}/proto/stable/[^.]*.proto")
SET(STABLE_PROTOS)
FOREACH(FILE ${STABLE_PROTOS_REL})
    GET_FILENAME_COMPONENT(ABS_FILE ${FILE} ABSOLUTE)
    LIST(APPEND STABLE_PROTOS ${ABS_FILE})
ENDFOREACH()
FILE(GLOB_RECURSE SANDBOX_PROTOS_REL
     RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}"
     "${CMAKE_CURRENT_SOURCE_DIR}/proto/sandbox/[^.]*.proto")
SET(SANDBOX_PROTOS)
FOREACH(FILE ${SANDBOX_PROTOS_REL})
    GET_FILENAME_COMPONENT(ABS_FILE ${FILE} ABSOLUTE)
    LIST(APPEND SANDBOX_PROTOS ${ABS_FILE})
ENDFOREACH()

SET(STABLE_ROOT "${CMAKE_SOURCE_DIR}/proto/stable")
SET(SANDBOX_ROOT "${CMAKE_SOURCE_DIR}/proto/sandbox")

# --- language bindings ---

IF(BUILD_CPP)
    ADD_SUBDIRECTORY(cpp)
ENDIF()
IF(BUILD_JAVA)
    ADD_SUBDIRECTORY(java)
ENDIF()
IF(BUILD_PYTHON)
    ADD_SUBDIRECTORY(python)
ENDIF()
IF(BUILD_MATLAB)
    ADD_SUBDIRECTORY(matlab)
ENDIF()

# --- install protocol anyways for backwards compatibility ---

ADD_SUBDIRECTORY(proto)

# --- package ---

SET(CPACK_PACKAGE_VERSION_MAJOR ${RST_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${RST_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${RST_VERSION_PATCH})

SET(CPACK_PACKAGE_VENDOR "CoR-Lab Bielefeld University")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/COPYING.txt")

INCLUDE(ProvideFlexibleCPack)
