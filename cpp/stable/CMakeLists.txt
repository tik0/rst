FIND_PACKAGE(Threads REQUIRED)

# Version stuff

INCLUDE(PadString)

PAD_STRING(MAJOR_PADDED 2 "0" ${RST_VERSION_MAJOR})
PAD_STRING(MINOR_PADDED 2 "0" ${RST_VERSION_MINOR})
PAD_STRING(PATCH_PADDED 2 "0" ${RST_VERSION_PATCH})
SET(RST_VERSION_NUMERIC "${MAJOR_PADDED}${MINOR_PADDED}${PATCH_PADDED}")
CONFIGURE_FILE(rst/RSTVersion.cpp.in "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.cpp" @ONLY)
CONFIGURE_FILE(rst/RSTVersion.h.in "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.h" @ONLY)
LIST(APPEND CPP_STABLE_HEADERS "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.h")

# Configure library

INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_BINARY_DIR})

MESSAGE(STATUS "RSTSTABLE_CFLAGS: ${RSTSTABLE_CFLAGS}")
ADD_DEFINITIONS(${RSTSTABLE_CFLAGS})

INCLUDE_DIRECTORIES(BEFORE "${CMAKE_CURRENT_BINARY_DIR}/rst")
ADD_LIBRARY(${STABLE_NAME} SHARED ${CPP_STABLE_SOURCES}
                                  "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.cpp"
                                  "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.h")
TARGET_LINK_LIBRARIES(${STABLE_NAME} ${CMAKE_THREAD_LIBS_INIT}) # ${PROTOBUF_LIBRARIES}
SET_TARGET_PROPERTIES(${STABLE_NAME}
                      PROPERTIES
                      VERSION ${SO_VERSION})

# Install library and headers

INSTALL(TARGETS ${STABLE_NAME}
        EXPORT  RSTDepends
        ARCHIVE DESTINATION lib
        LIBRARY DESTINATION lib
        RUNTIME DESTINATION bin)

INSTALL_FILES_RECURSIVE("include/rst/stable/" ${CPP_STABLE_HEADERS})
